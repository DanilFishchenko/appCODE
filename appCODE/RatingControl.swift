//
//  RatingControl.swift
//  appCODE
//
//  Created by Danil Fishchenko on 28.11.2022.
//

import UIKit
import SwiftUI

@IBDesignable class RatingControl :UIStackView {
    //MARK: Init
    private var ratingButtons = [UIButton]()
    
    var rating = 0
      
    
    override init(frame: CGRect) {
        super .init(frame: frame)
        setupButtons()
    }
    
    required init(coder: NSCoder) {
        super .init(coder: coder)
        setupButtons()
    }
    
    //MARK: Methods
    @objc func ratingButtonTapped(button:UIButton){
        print ("Button Tapped üëç \(button)")
    }
    
    private func setupButtons() {
        
        //–°–æ–∑–¥–∞—ë–º 5 –∫–Ω–æ–ø–æ–∫
        for _ in 0..<5 {
        //–°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É
        let button = UIButton()
        //–ü–æ–∫—Ä–∞—Å–∏—Ç—å –∫–Ω–æ–ø–∫—É
        button.backgroundColor = .red
        //–ö–æ–Ω—Å—Ç—Ä–µ–π–Ω—Ç—ã
        // –û—Ç–∫—é—á–∏—Ç—å –∞–≤—Ç–æ–∫–æ–Ω—Å—Ç—Ä–µ–π–Ω—Ç—ã (–≤–Ω—É—Ç—Ä–∏ —Å—Ç–µ–∫–í—å—é –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é? –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö –Ω—É–∂–Ω–æ –≤—ã–∫–ª—é—á–∞—Ç—å –≤—Ä—É—á–Ω—É—é)
        button.translatesAutoresizingMaskIntoConstraints = false
        
        //–í—ã—Å–æ—Ç–∞ –∏ —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏
        button.heightAnchor.constraint(equalToConstant: 44.0).isActive = true
        button.widthAnchor.constraint(equalToConstant: 44.0).isActive = true
        button.addTarget(self, action: #selector(ratingButtonTapped(button:)), for: .touchUpInside)
        
        //–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç –Ω–∞ –≤—å—é
        addArrangedSubview(button)
        //–¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        ratingButtons.append(button)
            
        }
        self.spacing = 8.0
                
   
    }
    
      
}
